import telebot
from telebot import types
from random import random
import sqlite3
import os.path
import time

API_TOKEN = '5047557999:AAHVO2o8e3pBwKnlKiIdCbGwSse7ycEO9O8'
bot = telebot.TeleBot(API_TOKEN)

tconv = lambda x: time.strftime("%H:%M:%S %d.%m.%Y", time.localtime(x)) #–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞—Ç—ã –≤ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π –≤–∏–¥

stone = '–∫–∞–º–µ–Ω—å'
stone_smile = 'ü™®'
all_stone =[stone, stone_smile, stone + stone_smile, stone_smile + stone]
# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–æ–∂–Ω–∏—Ü
shear = '–Ω–æ–∂–Ω–∏—Ü—ã'
shear_smile = '‚úÇÔ∏è'
all_shear = [shear, shear_smile, shear + shear_smile, shear_smile + shear]
# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—É–º–∞–≥–∞
paper = '–±—É–º–∞–≥–∞'
paper_smile = 'üßª'
all_paper = [paper, paper_smile, paper + paper_smile, paper_smile + paper]

markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
stone_button = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
shear_button = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
paper_button = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
markup.add(stone_button, shear_button, paper_button)




class Tester:

    def start1(self, message):
        # self.arg = arg
        print(message)
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –≤—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã –ø–æ–∫–∞–∂–µ—à—å!')

    def my_game1(self, message):
        comp_move = int(random() * 3)
        user_id = message.from_user.id
        if not os.path.exists('itproger.db'):
            print('Error not file')  # –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å
        db = sqlite3.connect('itproger.db')  # —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –∏–º–µ–Ω–µ–º –≤ —Å–∫–æ–±–∫–∞—Ö
        player = 0
        comp = 0
        # —Å–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä
        cur = db.cursor()
        login_player = cur.execute("SELECT id FROM CHEK WHERE id = ?", (user_id,)).fetchone()
        # print('login_player', login_player)
        if login_player is None:
            cur.execute("INSERT INTO CHEK VALUES(?,?, ?)", (user_id, comp, player))
        else:
            znachenia = cur.execute("SELECT chek_comp, chek_player FROM CHEK WHERE id = ?", (user_id,)).fetchone()
            # print('znachenia    ', znachenia)
            comp = int(znachenia[0])
            player = int(znachenia[1])
            # print('–∫–æ–º–ø—å—é—Ç–µ—Ä   ', comp, type(comp))
            # print('–∏–≥—Ä–æ–∫       ', player, type(player))
            sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
            data = (comp, player, user_id)
            cur.execute(sql_update_query, data)
            db.commit()




        # –Ω–∞—á–∏–Ω–∞—é –≤–æ—Ä–æ—Ç–∏—Ç—å —Å–æ –≤—Ç–æ—Ä–æ–π 'events' —Ç–∞–±–ª–∏—Ü–µ–π –≤ –±–∞–∑–µ 'itproger.db'
        cur.execute("""CREATE TABLE IF NOT EXISTS events(
           Numbers_move INT PRIMARY KEY,
           ID_Player int, 
           date DATE,  
           showed_player TEXT, 
           showed_comp TEXT, 
           total_C_P TEXT); 
        """)
        db.commit()

        # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, —á—Ç–æ –ø–æ–∫–∞–∑–∞–ª –∏–≥—Ä–æ–∫, —á—Ç–æ –ø–æ–∫–∞–∑–∞–ª –∫–æ–º–ø, –∫–ª–∞—Å—Å–æ–º —è –¥—É–º–∞—é —ç—Ç–æ –±—ã–ª–æ –±—ã —É–¥–æ–±–Ω–µ–µ
        player_showed = ''
        if message.text.lower() in all_stone:
            player_showed = stone
        elif message.text.lower() in all_stone:
            player_showed = shear
        else:
            player_showed = paper

        comp_showed = ''
        if comp_move == 0:
            comp_showed = stone
        elif comp_move == 1:
            comp_showed = shear
        else:
            comp_showed = paper
        total_events = f'comp: {str(comp)}  player: {str(player)}'
        sqlite_insert_with_param = """INSERT INTO events
                                      (ID_Player, date, showed_player, showed_comp, total_C_P)
                                      VALUES (?, ?, ?, ?, ?);"""

        data_tuple = (user_id, tconv(message.date), player_showed, comp_showed, total_events)
        cur.execute(sqlite_insert_with_param, data_tuple)

        db.commit()

        # –∫–æ—Ä–æ—á–µ, –∫–∞–∫–æ–≥–æ-—Ç–æ —Ö—É—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç INTEGER PRIMARY KEY –≤ —Å—Ç–æ–ª–±—Ü–µ Numpers_move, –≤–µ–∑–¥–µ NULL, —á—É—Ç–∫–∞ –ø–æ–≥—É–≥–ª–∏–ª,
        # –ø–∏—à—É—Ç –ø—Ä–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã, —á—Ç–æ –±–µ–¥–∞ —Å MySQL
        # —è "–∫–æ—Å—Ç—ã–ª–µ–º" —á–µ—Ä–µ–∑ += 1 –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –ø–æ–¥—Å—á–µ—Ç, –Ω–æ —ç—Ç–æ –∂–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∞–≤—Ç–æ–º–∞—Ç–æ–º

        cur.close()






        # - –∑–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —á–µ–∫
        ## - –∑–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö + –ø–æ–¥—Å—á–µ—Ç –Ω–µ —á–µ–∫_*** –∞ —Ç–µ—Å—Ç +=1
        ### - return test[user][0] test[user][1]
        ### # - –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã –∫–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        if comp_move == 0:  ### #
            if message.text.lower() in [stone, stone_smile, stone + stone_smile, stone_smile + stone]:  ### #

                check = f'''

     –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'''
                bot.send_message(message.chat.id, f'''–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –∫–∞–º–µ–Ω—åü™®, —É –≤–∞—Å –Ω–∏—á—å—è.
    {check} ''', reply_markup=markup)



            elif message.text.lower() in [shear, shear_smile, shear + shear_smile,
                                          shear_smile + shear]:  ### #  win comp[0]
                comp += 1
                cur = db.cursor()
                sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
                data = (comp, player, user_id)
                cur.execute(sql_update_query, data)
                db.commit()
                check = f'''

    –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'''
                bot.send_message(message.chat.id, f'''–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –∫–∞–º–µ–Ω—åü™®, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.
    {check}''', reply_markup=markup)

                return comp



            elif message.text.lower() in [paper, paper_smile, paper + paper_smile,
                                          paper_smile + paper]:  ### #  win player[1]
                player += 1
                cur = db.cursor()
                sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
                data = (comp, player, user_id)
                cur.execute(sql_update_query, data)
                db.commit()
                check = f'''

    –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'''
                bot.send_message(message.chat.id, f'''–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –∫–∞–º–µ–Ω—åü™®, –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏!
    {check}''', reply_markup=markup)

                return player



        elif comp_move == 1:  ### #
            if message.text.lower() in [stone, stone_smile, stone + stone_smile,
                                        stone_smile + stone]:  ### #  win player[1]
                player += 1
                cur = db.cursor()
                sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
                data = (comp, player, user_id)
                cur.execute(sql_update_query, data)
                db.commit()
                check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
                bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã‚úÇÔ∏è, –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏! {check}',
                                 reply_markup=markup)

                return player




            elif message.text.lower() in [shear, shear_smile, shear + shear_smile, shear_smile + shear]:  ### #

                check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
                bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã‚úÇÔ∏è, —É –≤–∞—Å –Ω–∏—á—å—è. {check}',
                                 reply_markup=markup)




            elif message.text.lower() in [paper, paper_smile, paper + paper_smile,
                                          paper_smile + paper]:  ### #  win comp[0]
                comp += 1
                cur = db.cursor()
                sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
                data = (comp, player, user_id)
                cur.execute(sql_update_query, data)
                db.commit()
                check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
                bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã‚úÇÔ∏è, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. {check}',
                                 reply_markup=markup)

                return comp




        elif comp_move == 2:  ### #
            if message.text.lower() in [stone, stone_smile, stone + stone_smile,
                                        stone_smile + stone]:  ### #  win comp[1]
                comp += 1
                cur = db.cursor()
                sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
                data = (comp, player, user_id)
                cur.execute(sql_update_query, data)
                db.commit()
                check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
                bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –±—É–º–∞–≥—Éüßª, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. {check}',
                                 reply_markup=markup)

                return comp



            elif message.text.lower() in [shear, shear_smile, shear + shear_smile,
                                          shear_smile + shear]:  ### #  win player[0]
                player += 1
                cur = db.cursor()
                sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
                data = (comp, player, user_id)
                cur.execute(sql_update_query, data)
                db.commit()
                check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
                bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –±—É–º–∞–≥—Éüßª, –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏! {check}',
                                 reply_markup=markup)

                return player


            elif message.text.lower() in [paper, paper_smile, paper + paper_smile, paper_smile + paper]:  ### #

                check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
                bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –±—É–º–∞–≥—Éüßª, —É –≤–∞—Å –Ω–∏—á—å—è. {check}',
                                 reply_markup=markup)

# class Game