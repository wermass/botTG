import telebot
from telebot import types
from random import random
# import pickle
import sqlite3


API_TOKEN = '5047557999:AAHVO2o8e3pBwKnlKiIdCbGwSse7ycEO9O8'
bot = telebot.TeleBot(API_TOKEN)



# db = sqlite3.connect('itproger.db')  # —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –∏–º–µ–Ω–µ–º –≤ —Å–∫–æ–±–∫–∞—Ö
#
# # —Å–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä
# cur = db.cursor()



# with open('check_bots_game.bin', 'rb') as f:
#     data_new = pickle.load(f)  # –≤ —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–Ω –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å—ë –∏–∑ —Ñ–∞–π–ª–∞ 'check_bots_game.bin'

# —Ç—É—Ç —è –ø–æ–ø—ã—Ç–∞–ª—Å—è —Å–¥–µ–ª–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /start –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ –∫–ª—é—á "user"(–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞) —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º "—Ö",
# –≥–¥–µ –∫–ª—é—á - —ç—Ç–æ –∞–π–¥–∏ —á–∞—Ç–∞, –∞ —Ö = 0,–Ω–æ —Å –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥–æ–π —Å—Ç–∞—Ä—Ç —Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è +1.
# —Ç–æ –µ—Å—Ç—å –ø–æ –∑–∞–¥—É–º–∫–µ –æ–Ω –∏–∑ –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞ –¥–æ–±–∞–≤–ª—è–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á (–∞–π–¥–∏) –≤ —Å–ª–æ–≤–∞—Ä—å —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 0.
# –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–∞–Ω–¥–µ /start –æ–Ω –≤–∏–¥–∏—Ç –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ —ç—Ç–æ—Ç –∫–ª—é—á –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ +1
# –Ω–æ –∫–∞–∫ –≤—Å–µ–≥–¥–∞ –≤—ã—Ö–æ–¥–∏—Ç –∫–∞–∫–∞—è-—Ç–æ —à–Ω—è–≥–∞, –æ–Ω –≤–±–∏–≤–∞–µ—Ç —Å–Ω–∞—á–∞–ª–∞ –≤ —Å–ª–æ–≤–∞—Ä—å –∫–ª—é—á —Å –∞–π–¥–∏ (5124962240) —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 0,
# –Ω–æ —Å–æ –≤—Ç–æ—Ä–æ–π –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç KeyError: 5124962240,—è —Ç–∞–∫ –ø–æ–Ω–∏–º–∞—é –æ–Ω –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç –∫–ª—é—á.
glupo = 0
user = 0
x = user + 1
test = {
}  # –æ–±–æ–∑–Ω–∞—á–∞—Ç—å –ø–µ—Ä–≤—ã–º —Å—á—ë—Ç –∫–æ–º–ø–∞, –≤—Ç–æ—Ä—ã–º —Å—á—ë—Ç –∏–≥—Ä–æ–∫–∞
# test = data_new  # –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—Ä–∞–≤–Ω—è–ª –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–∑ pickle
# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞–º–Ω—è
y = '–∫–∞–º–µ–Ω—å'
y1 = 'ü™®'
# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–æ–∂–Ω–∏—Ü
e = '–Ω–æ–∂–Ω–∏—Ü—ã'
e1 = '‚úÇÔ∏è'
# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—É–º–∞–≥–∞
r = '–±—É–º–∞–≥–∞'
r1 = 'üßª'
# check_comp = 0  # –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –∫–æ–º–ø–∞
# check_player = 0  # –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ —é—Å–µ—Ä–∞
# data = test  # –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Å–ª–æ–≤–∞—Ä—è, —á—Ç–æ –±—ã —Å–æ—Ö—Ä–∞–Ω—è–ª
# print(data)
# print(data_new)


@bot.message_handler(commands=['start'])
def start(message):
    check_test = 0
    check_test1 = 0
    user = message.from_user.id



    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
    item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
    item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
    markup.add(item1, item2, item3)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –≤—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã –ø–æ–∫–∞–∂–µ—à—å!', reply_markup=markup)


@bot.message_handler(content_types='text')
def my_game(message):
    x = int(random() * 3)
    user = message.from_user.id
    global test
    test.setdefault(user, [0, 0])

    # with open('check_bots_game.bin', 'wb') as f:  # —Å—é–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç
    #     pickle.dump(data, f)  # —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç 'data' –∫–æ—Ç–æ—Ä–∞—è == 'test'

    db = sqlite3.connect('itproger.db')  # —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –∏–º–µ–Ω–µ–º –≤ —Å–∫–æ–±–∫–∞—Ö
        # —Å–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä
    cur = db.cursor()
    count1 = 3
    # znachenia = cur.execute("SELECT chek_comp, chek_player FROM CHEK WHERE id = ?", (user,)).fetchone()
    # print('znachenia    ', znachenia)
    # comp = int(znachenia[0])
    # player = int(znachenia[1])
    # print('–∫–æ–º–ø—å—é—Ç–µ—Ä   ', comp, type(comp))
    # print('–∏–≥—Ä–æ–∫       ', player, type(player))
    # print('count  ', count1)
    cur.execute("SELECT id FROM CHEK")  # rowid —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∞—Ä—Ç–∏–∫—É–ª –∫–∞–∂–¥–æ–π –∏–∑ –∑–∞–ø–∏—Å–µ–π
    comp = 0
    player = 0
    for i in cur.fetchall():

        if user in i:
            count1 += 1
            print("–æ–±–Ω–æ–≤–∏–ª")
            # return count1
            znachenia = cur.execute("SELECT chek_comp, chek_player FROM CHEK WHERE id = ?", (user,)).fetchone()
            print('znachenia    ', znachenia)
            comp = int(znachenia[0])
            player = int(znachenia[1])
            print('–∫–æ–º–ø—å—é—Ç–µ—Ä   ', comp, type(comp))
            print('–∏–≥—Ä–æ–∫       ', player, type(player))
            sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
            data = (comp, player, user)
            cur.execute(sql_update_query, data)
            db.commit()
            break
    if count1 == 3:
        print("–¥–æ–±–∞–≤–∏–ª")
        cur.execute("INSERT INTO CHEK VALUES(?,?, ?)", (user, comp, player))
        #     print("–¥–æ–±–∞–≤–∏–ª")

    # znachenia = cur.execute("SELECT chek_comp, chek_player FROM CHEK WHERE id = ?", (user,)).fetchone()
    # comp = int(znachenia[0])
    # player = int(znachenia[1])
    # print('–∫–æ–º–ø—å—é—Ç–µ—Ä   ', comp, type(comp))
    # print('–∏–≥—Ä–æ–∫       ', player, type(player))


    # print('–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö   ', prt, type(prt))
    # print('chek komp  ', prt[0], type(prt[0]))
    # print('int chek komp  ', int(prt[0]), type(prt[0]))
    # for i in cur.fetchall():
    #     if user in i:
    #         print(i[0])
    cur.close()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
    item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
    item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
    markup.add(item1, item2, item3)

    # - –∑–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —á–µ–∫
    ## - –∑–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö + –ø–æ–¥—Å—á–µ—Ç –Ω–µ —á–µ–∫_*** –∞ —Ç–µ—Å—Ç +=1
    ### - return test[user][0] test[user][1]
    ### # - –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã –∫–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if x == 0:  ### #
        if message.text.lower() in [y, y1, y + y1, y1 + y]:  ### #

            check = f'''

 –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'''
            bot.send_message(message.chat.id, f'''–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –∫–∞–º–µ–Ω—åü™®, —É –≤–∞—Å –Ω–∏—á—å—è. 
{check} ''', reply_markup=markup)
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
            item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
            item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
            markup.add(item1, item2, item3)


        elif message.text.lower() in [e, e1, e + e1, e1 + e]:  ### #  win comp[0]
            comp += 1
            cur = db.cursor()
            sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
            data = (comp, player, user)
            cur.execute(sql_update_query, data)
            db.commit()
            check = f''' 
            
–°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'''
            bot.send_message(message.chat.id, f'''–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –∫–∞–º–µ–Ω—åü™®, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. 
{check}''', reply_markup=markup)

            return comp

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
            item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
            item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
            markup.add(item1, item2, item3)


        elif message.text.lower() in [r, r1, r + r1, r1 + r]:  ### #  win player[1]
            player += 1
            cur = db.cursor()
            sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
            data = (comp, player, user)
            cur.execute(sql_update_query, data)
            db.commit()
            check = f''' 

–°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'''
            bot.send_message(message.chat.id, f'''–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –∫–∞–º–µ–Ω—åü™®, –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏! 
{check}''', reply_markup=markup)

            return player

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
            item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
            item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
            markup.add(item1, item2, item3)


    elif x == 1:  ### #
        if message.text.lower() in [y, y1, y + y1, y1 + y]:  ### #  win player[1]
            player += 1
            cur = db.cursor()
            sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
            data = (comp, player, user)
            cur.execute(sql_update_query, data)
            db.commit()
            check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
            bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã‚úÇÔ∏è, –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏! {check}', reply_markup=markup)

            return player

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
            item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
            item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
            markup.add(item1, item2, item3)


        elif message.text.lower() in [e, e1, e + e1, e1 + e]:  ### #

            check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
            bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã‚úÇÔ∏è, —É –≤–∞—Å –Ω–∏—á—å—è. {check}', reply_markup=markup)

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
            item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
            item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
            markup.add(item1, item2, item3)


        elif message.text.lower() in [r, r1, r + r1, r1 + r]:  ### #  win comp[0]
            comp += 1
            cur = db.cursor()
            sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
            data = (comp, player, user)
            cur.execute(sql_update_query, data)
            db.commit()
            check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
            bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã‚úÇÔ∏è, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. {check}',
                             reply_markup=markup)

            return comp

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
            item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
            item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
            markup.add(item1, item2, item3)


    elif x == 2:  ### #
        if message.text.lower() in [y, y1, y + y1, y1 + y]:  ### #  win comp[1]
            comp += 1
            cur = db.cursor()
            sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
            data = (comp, player, user)
            cur.execute(sql_update_query, data)
            db.commit()
            check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
            bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –±—É–º–∞–≥—Éüßª, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. {check}', reply_markup=markup)

            return comp

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
            item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
            item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
            markup.add(item1, item2, item3)


        elif message.text.lower() in [e, e1, e + e1, e1 + e]:  ### #  win player[0]
            player += 1
            cur = db.cursor()
            sql_update_query = """UPDATE CHEK SET chek_comp = ?, chek_player = ? WHERE id = ?"""
            data = (comp, player, user)
            cur.execute(sql_update_query, data)
            db.commit()
            check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
            bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –±—É–º–∞–≥—Éüßª, –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏! {check}', reply_markup=markup)

            return player

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
            item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
            item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
            markup.add(item1, item2, item3)


        elif message.text.lower() in [r, r1, r + r1, r1 + r]:  ### #

            check = f' –°—á–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä - {comp} –í—ã - {player}'
            bot.send_message(message.chat.id, f'–∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑–∞–ª –±—É–º–∞–≥—Éüßª, —É –≤–∞—Å –Ω–∏—á—å—è. {check}', reply_markup=markup)

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
            item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
            item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
            markup.add(item1, item2, item3)



@bot.message_handler(content_types='text')
def bot_main(message):
    if message.text.lower() in '1':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('1')
        markup.add(item1)
        bot.send_message(message.chat.id, ' –ü—Ä–æ–¥–æ–ª–∂–∏–º!', reply_markup=markup)

    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('ü™®–ö–∞–º–µ–Ω—å')
        item2 = types.KeyboardButton('‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã')
        item3 = types.KeyboardButton('üßª–ë—É–º–∞–≥–∞')
        markup.add(item1, item2, item3)
        bot.send_message(message.chat.id, '''–ß—Ç–æ –±—ã –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É-
        –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ ü™®–∫–∞–º–µ–Ω—å,‚úÇÔ∏è–Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ üßª–±—É–º–∞–≥–∞
–í–≤–µ–¥–∏—Ç–µ "—Å–ª–æ–∂–∏—Ç—å –• –∏ –£, —á—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—É–º–º—É —á–∏—Å–µ–ª "–• –∏ –£"''', reply_markup=markup)


bot.infinity_polling()
